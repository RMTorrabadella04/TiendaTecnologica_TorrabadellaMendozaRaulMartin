package com.mycompany.tiendaonline;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

/**
 *
 * @author Raul
 */
public class Usuarios extends javax.swing.JFrame {


    public Usuarios() throws SQLException {
        
        
        
        initComponents();
        
        setTitle("Usuarios");
        setSize(1370, 790);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);

        RoundedPanel infoUsuario = new RoundedPanel(30);
        infoUsuario.setBackground(new Color(156, 156, 156));    
        infoUsuario.setBounds(25, 17, 1050, 710);
        infoUsuario.setLayout(new BorderLayout());

        
        infoUser = new JLabel("NO HAY INFORMACION DEL USUARIO, INICIE SESIÓN PARA VERLA :D");
        infoUser.setFont(new Font("Tahoma", Font.BOLD, 24));
        infoUser.setForeground(Color.WHITE);


        infoUser.setHorizontalAlignment(SwingConstants.CENTER);
        infoUsuario.add(infoUser, BorderLayout.CENTER);
        
        if (SesionIniciada.getInstance().isIniciado()) {
            
            String email = SesionIniciada.getEmail();
            
            String checkUserQuery = "SELECT * FROM Usuario WHERE email = ?";
            
            try (PreparedStatement pst = conexion.prepareStatement(checkUserQuery)) {
                
                pst.setString(1, email);
                
                ResultSet rs = pst.executeQuery();
                
                if (rs.next()) {
                   
                    int id = rs.getInt("id");
                    String nombre = rs.getString("nombre");
                    String calle = rs.getString("calle");
                    int numero = rs.getInt("numero");
                    String ciudad = rs.getString("ciudad");
                    String pais = rs.getString("pais");
                    
                    infoUser.setText("<html>ID: " + id + "<br><br>" +
                                     "NOMBRE: " + nombre + "<br><br>" +
                                     "EMAIL: " + email + "<br><br>" +
                                     "DIRECCION: <br><br>"+
                                     "&nbsp;&nbsp;&nbsp;&nbsp; - CALLE: " + calle + "<br><br>" +
                                     "&nbsp;&nbsp;&nbsp;&nbsp; - NUMERO: " + numero + "<br><br>" +
                                     "&nbsp;&nbsp;&nbsp;&nbsp; - CIUDAD: " + ciudad + "<br><br>" +
                                     "&nbsp;&nbsp;&nbsp;&nbsp; - PAIS: " + pais + "</html>");

                    
                    BotonIniciar.setEnabled(false);
                    BotonCerrar.setEnabled(true);
                    BotonHistorial.setEnabled(true); 

                }
             
            } catch (Exception e) {
                e.printStackTrace();
            }
            
            
        } else {
            
            BotonIniciar.setEnabled(true);
            BotonCerrar.setEnabled(false);
            BotonHistorial.setEnabled(false);  
            
        }
        


        this.jPanel1.add(infoUsuario);

        
        jPanel1.revalidate();
        jPanel1.repaint();

        setVisible(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        BotonCerrar = new javax.swing.JButton();
        BotonIniciar = new javax.swing.JButton();
        BotonHistorial = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1327, 90));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        BotonCerrar.setBackground(new java.awt.Color(102, 102, 102));
        BotonCerrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        BotonCerrar.setForeground(new java.awt.Color(255, 255, 255));
        BotonCerrar.setText("CERRAR SESIÓN");
        BotonCerrar.setBorderPainted(false);
        BotonCerrar.setDefaultCapable(false);
        BotonCerrar.setFocusPainted(false);
        BotonCerrar.setFocusable(false);
        BotonCerrar.setRequestFocusEnabled(false);
        BotonCerrar.setRolloverEnabled(false);
        BotonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCerrarActionPerformed(evt);
            }
        });

        BotonIniciar.setBackground(new java.awt.Color(102, 102, 102));
        BotonIniciar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        BotonIniciar.setForeground(new java.awt.Color(255, 255, 255));
        BotonIniciar.setText("INICIO SESIÓN");
        BotonIniciar.setBorderPainted(false);
        BotonIniciar.setDefaultCapable(false);
        BotonIniciar.setFocusPainted(false);
        BotonIniciar.setFocusable(false);
        BotonIniciar.setRequestFocusEnabled(false);
        BotonIniciar.setRolloverEnabled(false);
        BotonIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonIniciarActionPerformed(evt);
            }
        });

        BotonHistorial.setBackground(new java.awt.Color(102, 102, 102));
        BotonHistorial.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        BotonHistorial.setForeground(new java.awt.Color(255, 255, 255));
        BotonHistorial.setText("HISTORIAL DE COMPRA");
        BotonHistorial.setBorderPainted(false);
        BotonHistorial.setDefaultCapable(false);
        BotonHistorial.setFocusPainted(false);
        BotonHistorial.setFocusable(false);
        BotonHistorial.setRequestFocusEnabled(false);
        BotonHistorial.setRolloverEnabled(false);
        BotonHistorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonHistorialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(1137, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BotonHistorial)
                    .addComponent(BotonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(BotonIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BotonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 574, Short.MAX_VALUE)
                .addComponent(BotonHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCerrarActionPerformed
        
        BotonCerrar.setEnabled(false);
        BotonIniciar.setEnabled(true);
        BotonHistorial.setEnabled(false);
        
        SesionIniciada.getInstance().setIniciado(false); // Cambiar el estado de la sesión

        infoUser.setText("NO HAY INFORMACION DEL USUARIO, INICIE SESIÓN PARA VERLA :D");
        
    }//GEN-LAST:event_BotonCerrarActionPerformed

    private void BotonIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonIniciarActionPerformed
       
            String emailIntroducido = JOptionPane.showInputDialog("Introduce el correo del usuario con el cual quieres iniciar sesión:");

            SesionIniciada.setEmail(emailIntroducido);

            String checkUserQuery = "SELECT * FROM Usuario WHERE email = ?";

            try (PreparedStatement pst = conexion.prepareStatement(checkUserQuery)) {
                pst.setString(1, emailIntroducido);

                ResultSet rs = pst.executeQuery();

                // Verificamos si hay resultados
                if (!rs.next()) {
                    
                    JOptionPane.showMessageDialog(null, "No se encontró un usuario con el correo proporcionado.");
                } else {
                    
                    int id = rs.getInt("id");
                    String nombre = rs.getString("nombre");
                    String email = rs.getString("email");
                    String calle = rs.getString("calle");
                    int numero = rs.getInt("numero");
                    String ciudad = rs.getString("ciudad");
                    String pais = rs.getString("pais");

                    
                    infoUser.setText("<html>ID: " + id + "<br><br>" +
                                     "NOMBRE: " + nombre + "<br><br>" +
                                     "EMAIL: " + email + "<br><br>" +
                                     "DIRECCION: <br><br>" +
                                     "&nbsp;&nbsp;&nbsp;&nbsp; - CALLE: " + calle + "<br><br>" +
                                     "&nbsp;&nbsp;&nbsp;&nbsp; - NUMERO: " + numero + "<br><br>" +
                                     "&nbsp;&nbsp;&nbsp;&nbsp; - CIUDAD: " + ciudad + "<br><br>" +
                                     "&nbsp;&nbsp;&nbsp;&nbsp; - PAIS: " + pais + "</html>");

                    BotonCerrar.setEnabled(true);
                    BotonIniciar.setEnabled(false);
                    BotonHistorial.setEnabled(true);

                    SesionIniciada.getInstance().setIniciado(true);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        
    }//GEN-LAST:event_BotonIniciarActionPerformed

    private void BotonHistorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonHistorialActionPerformed
        
        HistorialCompra ventanaHistorial= null;
        ventanaHistorial = new HistorialCompra();

        // Añado un WindowListener para detectar el cierre de la ventana de usuarios
        
        ventanaHistorial.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                
                // Hago visible la ventana principal de nuevo cuando la ventana de usuarios se cierra
                
                setVisible(true); 
            }
        });

        // Muestro la ventana de usuarios
        
        ventanaHistorial.setVisible(true); 

        // Oculto la ventana principal
        
        setVisible(false); 
        
    }//GEN-LAST:event_BotonHistorialActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
          
        
         
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Usuarios().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
    Connection conexion = ConexionBBDDJson.conexion;
    JLabel infoUser;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonCerrar;
    private javax.swing.JButton BotonHistorial;
    private javax.swing.JButton BotonIniciar;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
